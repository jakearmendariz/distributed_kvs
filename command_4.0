docker build -t kvs:4.0 .

docker run -p 13800:13800 --net=kv_subnet --ip=10.10.0.2 --name="node1" -e ADDRESS="10.10.0.2:13800" -e VIEW="10.10.0.2:13800,10.10.0.3:13800,10.10.0.4:13800,10.10.0.5:13800" -e REPL_FACTOR=2 kvs:4.0

docker run -p 13801:13800 --net=kv_subnet --ip=10.10.0.3 --name="node2" -e ADDRESS="10.10.0.3:13800" -e VIEW="10.10.0.2:13800,10.10.0.3:13800,10.10.0.4:13800,10.10.0.5:13800" -e REPL_FACTOR=2 kvs:4.0

docker run -p 13802:13800 --net=kv_subnet --ip=10.10.0.4 --name="node3" -e ADDRESS="10.10.0.4:13800" -e VIEW="10.10.0.2:13800,10.10.0.3:13800,10.10.0.4:13800,10.10.0.5:13800" -e REPL_FACTOR=2 kvs:4.0

docker run -p 13803:13800 --net=kv_subnet --ip=10.10.0.5 --name="node4" -e ADDRESS="10.10.0.5:13800" -e VIEW="10.10.0.2:13800,10.10.0.3:13800,10.10.0.4:13800,10.10.0.5:13800" -e REPL_FACTOR=2 kvs:4.0

docker stop node1 node2 node3 node4 && docker rm node1 node2 node3 node4

curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://127.0.0.1:13800/kvs/shards
curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://127.0.0.1:13800/kvs/key-count

PUT

curl --request PUT --header "Content-Type: application/json" --write-out "%{http_code}\n" --data '{"value": "value2", "causal-context": "causal-context-object"}' http://127.0.0.1:13802/kvs/keys/key2

curl --request PUT --header "Content-Type: application/json" --write-out "%{http_code}\n" --data '{"view":"10.10.0.2:13800,10.10.0.3:13800,10.10.0.4:13800,10.10.0.5:13800", "repl-factor":2}' http://127.0.0.1:13800/kvs/view-change